plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "1.1.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modApi("io.github.cottonmc:Jankson-Fabric:$project.jankson_version") { transitive = false }
    include "io.github.cottonmc:Jankson-Fabric:$project.jankson_version"

    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
}

repositories {
    maven {
        url = "http://server.bbkr.space:8081/artifactory/libs-release"
        name = "Cotton"
        allowInsecureProtocol = true
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}


// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    it.options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    //noinspection GrDeprecatedAPIUsage
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = '7MnvHj3n'
    versionNumber = "SmoothBedrock-by-Blayyke $project.version"
    uploadFile = remapJar
    addGameVersion('1.16.2')
    addGameVersion('1.16.3')
    addGameVersion('1.16.4')
    addGameVersion('1.16.5')
    addLoader('fabric')
}
def CURSEFORGE_TOKEN = System.getenv("CURSEFORGE_TOKEN")

curseforge {
    apiKey CURSEFORGE_TOKEN == null ? "" : CURSEFORGE_TOKEN
    project {
        id = 485752
        releaseType = 'release'
        addGameVersion '1.16.2'
        addGameVersion '1.16.3'
        addGameVersion '1.16.4'
        addGameVersion '1.16.5'
        addGameVersion 'Fabric'

        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
            displayName = "SmoothBedrock-$project.version"
        }
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}